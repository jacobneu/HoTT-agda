{-# OPTIONS --without-K #-}

module example-divmod where 

import 01-simpleTT 
open 01-simpleTT public

{- Library -}
open import Agda.Builtin.Nat renaming (Nat to ‚Ñï)
infix 4 _,_
record _√ó_ (A B : Type ‚Ñì) : Type ‚Ñì where
  constructor _,_
  field
    proj‚ÇÅ : A
    proj‚ÇÇ : B
open _√ó_ public
{- /Library -}


_<‚ÇÇ_ : ‚Ñï ‚Üí ‚Ñï ‚Üí ùüö
_ <‚ÇÇ 0 = off 
0 <‚ÇÇ (suc n) = on
(suc m) <‚ÇÇ (suc n) = m <‚ÇÇ n 

{-# TERMINATING #-}
-- d ‚â† 0
divmod : ‚Ñï ‚Üí ‚Ñï ‚Üí ‚Ñï √ó ‚Ñï 
divmod n d = if n <‚ÇÇ d 
             then (0 , n) 
             else (q + 1 , r)
             where
             (q,r) = divmod (n - d) d
             q = proj‚ÇÅ (q,r)
             r = proj‚ÇÇ (q,r)

undivmod : ‚Ñï ‚Üí ‚Ñï √ó ‚Ñï ‚Üí ‚Ñï 
undivmod d (q , r) = q * d + r

